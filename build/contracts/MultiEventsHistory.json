{
  "contractName": "MultiEventsHistory",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "claimContractOwnership",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "changeContractOwnership",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingContractOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawEther",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isAuthorized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_caller",
          "type": "address"
        }
      ],
      "name": "authorize",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_caller",
          "type": "address"
        }
      ],
      "name": "reject",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405260008054600160a060020a031916331790556107c4806100256000396000f3006080604052600436106100a35763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416634592cd1d8114610192578063557f4bc9146101bb5780635aa77d3c146101dc5780635ecb16cd1461020d5780637362377b14610262578063ab0da5a914610277578063b6a5d7de14610298578063ce606ee0146102b9578063f2fde38b146102ce578063fe9fbb80146102ef575b3480156100af57600080fd5b503360009081526002602052604090205460ff1615156100ce57610190565b33600160a060020a031660003660405180838380828437820191505092505050600060405180830381855af4915050151561019057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f5b4d756c74694576656e7473486973746f72795d2043616e6e6f742064656c6560448201527f6761746563616c6c20746f20612073656e646572000000000000000000000000606482015290519081900360840190fd5b005b34801561019e57600080fd5b506101a7610310565b604080519115158252519081900360200190f35b3480156101c757600080fd5b506101a7600160a060020a03600435166103a1565b3480156101e857600080fd5b506101f16103fc565b60408051600160a060020a039092168252519081900360200190f35b34801561021957600080fd5b50604080516020600480358082013583810280860185019096528085526101909536959394602494938501929182918501908490808284375094975061040b9650505050505050565b34801561026e57600080fd5b506101906105aa565b34801561028357600080fd5b50610190600160a060020a0360043516610608565b3480156102a457600080fd5b506101a7600160a060020a0360043516610656565b3480156102c557600080fd5b506101f16106d5565b3480156102da57600080fd5b506101a7600160a060020a03600435166106e4565b3480156102fb57600080fd5b506101a7600160a060020a0360043516610783565b600154600090600160a060020a0316331461032d5750600061039e565b60015460008054604051600160a060020a0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a038416179091551681555b90565b60008054600160a060020a03163314156103f757600160a060020a03821615156103cd575060006103f7565b506001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161781555b919050565b600154600160a060020a031681565b60008054819081908190600160a060020a03163314156105a35760008054600160a060020a0316945092505b84518310156105a357848381518110151561044e57fe5b6020908102909101810151604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051919450600160a060020a038516926370a08231926024808401938290030181600087803b1580156104b857600080fd5b505af11580156104cc573d6000803e3d6000fd5b505050506040513d60208110156104e257600080fd5b5051905060008111156105985781600160a060020a031663a9059cbb85836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561056b57600080fd5b505af115801561057f573d6000803e3d6000fd5b505050506040513d602081101561059557600080fd5b50505b600190920191610437565b5050505050565b60008054600160a060020a03163314156106055750303160008111156106055760008054604051600160a060020a039091169183156108fc02918491818181858888f19350505050158015610603573d6000803e3d6000fd5b505b50565b3360009081526002602052604090205460ff16806106305750600054600160a060020a031633145b1561060557600160a060020a03166000908152600260205260409020805460ff19169055565b3360009081526002602052604081205460ff168061067e5750600054600160a060020a031633145b156103f757600160a060020a03821660009081526002602052604090205460ff16156106ac575060006103f7565b50600160a060020a03166000908152600260205260409020805460ff1916600190811790915590565b600054600160a060020a031681565b60008054600160a060020a03163314156103f757600160a060020a0382161515610710575060006103f7565b60008054604051600160a060020a03808616939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35060008054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff1991821617909155600180549091168155919050565b60026020526000908152604090205460ff16815600a165627a7a72305820f2184bda52a6a63b8fa9c5e4f704ed45704e5091c0e7d830e16b5f2449bc82290029",
  "deployedBytecode": "0x6080604052600436106100a35763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416634592cd1d8114610192578063557f4bc9146101bb5780635aa77d3c146101dc5780635ecb16cd1461020d5780637362377b14610262578063ab0da5a914610277578063b6a5d7de14610298578063ce606ee0146102b9578063f2fde38b146102ce578063fe9fbb80146102ef575b3480156100af57600080fd5b503360009081526002602052604090205460ff1615156100ce57610190565b33600160a060020a031660003660405180838380828437820191505092505050600060405180830381855af4915050151561019057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f5b4d756c74694576656e7473486973746f72795d2043616e6e6f742064656c6560448201527f6761746563616c6c20746f20612073656e646572000000000000000000000000606482015290519081900360840190fd5b005b34801561019e57600080fd5b506101a7610310565b604080519115158252519081900360200190f35b3480156101c757600080fd5b506101a7600160a060020a03600435166103a1565b3480156101e857600080fd5b506101f16103fc565b60408051600160a060020a039092168252519081900360200190f35b34801561021957600080fd5b50604080516020600480358082013583810280860185019096528085526101909536959394602494938501929182918501908490808284375094975061040b9650505050505050565b34801561026e57600080fd5b506101906105aa565b34801561028357600080fd5b50610190600160a060020a0360043516610608565b3480156102a457600080fd5b506101a7600160a060020a0360043516610656565b3480156102c557600080fd5b506101f16106d5565b3480156102da57600080fd5b506101a7600160a060020a03600435166106e4565b3480156102fb57600080fd5b506101a7600160a060020a0360043516610783565b600154600090600160a060020a0316331461032d5750600061039e565b60015460008054604051600160a060020a0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a038416179091551681555b90565b60008054600160a060020a03163314156103f757600160a060020a03821615156103cd575060006103f7565b506001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161781555b919050565b600154600160a060020a031681565b60008054819081908190600160a060020a03163314156105a35760008054600160a060020a0316945092505b84518310156105a357848381518110151561044e57fe5b6020908102909101810151604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051919450600160a060020a038516926370a08231926024808401938290030181600087803b1580156104b857600080fd5b505af11580156104cc573d6000803e3d6000fd5b505050506040513d60208110156104e257600080fd5b5051905060008111156105985781600160a060020a031663a9059cbb85836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561056b57600080fd5b505af115801561057f573d6000803e3d6000fd5b505050506040513d602081101561059557600080fd5b50505b600190920191610437565b5050505050565b60008054600160a060020a03163314156106055750303160008111156106055760008054604051600160a060020a039091169183156108fc02918491818181858888f19350505050158015610603573d6000803e3d6000fd5b505b50565b3360009081526002602052604090205460ff16806106305750600054600160a060020a031633145b1561060557600160a060020a03166000908152600260205260409020805460ff19169055565b3360009081526002602052604081205460ff168061067e5750600054600160a060020a031633145b156103f757600160a060020a03821660009081526002602052604090205460ff16156106ac575060006103f7565b50600160a060020a03166000908152600260205260409020805460ff1916600190811790915590565b600054600160a060020a031681565b60008054600160a060020a03163314156103f757600160a060020a0382161515610710575060006103f7565b60008054604051600160a060020a03808616939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35060008054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff1991821617909155600180549091168155919050565b60026020526000908152604090205460ff16815600a165627a7a72305820f2184bda52a6a63b8fa9c5e4f704ed45704e5091c0e7d830e16b5f2449bc82290029",
  "sourceMap": "507:1441:1:-;;;661:13:4;:26;;-1:-1:-1;;;;;;661:26:4;677:10;661:26;;;507:1441:1;;;;;;",
  "deployedSourceMap": "507:1441:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1634:10:1;1621:24;;;;:12;:24;;;;;;;;1620:25;1616:62;;;1661:7;;1616:62;1818:10;-1:-1:-1;;;;;1818:23:1;1842:8;;1818:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1817:34;1813:127;;;1867:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1813:127;507:1441;1202:338:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1202:338:4;;;;;;;;;;;;;;;;;;;;;;857:228;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;857:228:4;-1:-1:-1;;;;;857:228:4;;;;;472:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;472:35:4;;;;;;;;-1:-1:-1;;;;;472:35:4;;;;;;;;;;;;;;2151:409;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2151:409:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2151:409:4;;-1:-1:-1;2151:409:4;;-1:-1:-1;;;;;;;2151:409:4;2676:198;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2676:198:4;;;;1257:117:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1257:117:1;-1:-1:-1;;;;;1257:117:1;;;;;928:233;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;928:233:1;-1:-1:-1;;;;;928:233:1;;;;;438:28:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;438:28:4;;;;1700:328;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1700:328:4;-1:-1:-1;;;;;1700:328:4;;;;;587:44:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;587:44:1;-1:-1:-1;;;;;587:44:1;;;;;1202:338:4;1298:20;;1260:4;;-1:-1:-1;;;;;1298:20:4;1284:10;:34;1280:77;;-1:-1:-1;1341:5:4;1334:12;;1280:77;1408:20;;;1393:13;;1372:57;;-1:-1:-1;;;;;1408:20:4;;;;1393:13;;;;1372:57;;;-1:-1:-1;1455:20:4;;;;1439:36;;-1:-1:-1;;1439:36:4;;;-1:-1:-1;;;;;1455:20:4;;1439:36;;;;1485:27;;;1202:338;;:::o;857:228::-;949:4;569:13;;-1:-1:-1;;;;;569:13:4;555:10;:27;551:59;;;-1:-1:-1;;;;;973:10:4;;;969:53;;;-1:-1:-1;1006:5:4;999:12;;969:53;-1:-1:-1;1031:20:4;:26;;-1:-1:-1;;1031:26:4;-1:-1:-1;;;;;1031:26:4;;;;;598:1;857:228;;;:::o;472:35::-;;;-1:-1:-1;;;;;472:35:4;;:::o;2151:409::-;2240:22;569:13;;2240:22;;;;;;-1:-1:-1;;;;;569:13:4;555:10;:27;551:59;;;2265:13;;;-1:-1:-1;;;;;2265:13:4;;-1:-1:-1;2265:13:4;-1:-1:-1;2288:266:4;2309:6;:13;2305:1;:17;2288:266;;;2381:6;2388:1;2381:9;;;;;;;;;;;;;;;;;;;;2420:21;;;;;;2436:4;2420:21;;;;;;2381:9;;-1:-1:-1;;;;;;2420:15:4;;;;;:21;;;;;;;;;;-1:-1:-1;2420:15:4;:21;;;5:2:-1;;;;30:1;27;20:12;5:2;2420:21:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2420:21:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2420:21:4;;-1:-1:-1;2469:1:4;2459:11;;2455:89;;;2490:5;-1:-1:-1;;;;;2490:14:4;;2505;2521:7;2490:39;;;;;;;;;;;;;-1:-1:-1;;;;;2490:39:4;-1:-1:-1;;;;;2490:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2490:39:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2490:39:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;2455:89:4;2324:3;;;;;2288:266;;;2151:409;;;;;:::o;2676:198::-;2748:12;569:13;;-1:-1:-1;;;;;569:13:4;555:10;:27;551:59;;;-1:-1:-1;2771:4:4;2763:21;2808:1;2798:11;;2794:74;;;2826:13;;;:31;;-1:-1:-1;;;;;2826:13:4;;;;:31;;;;;2849:7;;2826:31;:13;:31;2849:7;2826:13;:31;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2826:31:4;2794:74;2676:198;:::o;1257:117:1:-;689:10;676:24;;;;:12;:24;;;;;;;;;:68;;-1:-1:-1;731:13:1;;-1:-1:-1;;;;;731:13:1;717:10;:27;676:68;672:109;;;-1:-1:-1;;;;;1346:21:1;;;;;:12;:21;;;;;1339:28;;-1:-1:-1;;1339:28:1;;;1257:117::o;928:233::-;689:10;1011:4;676:24;;;:12;:24;;;;;;;;;:68;;-1:-1:-1;731:13:1;;-1:-1:-1;;;;;731:13:1;717:10;:27;676:68;672:109;;;-1:-1:-1;;;;;1036:21:1;;;;;;:12;:21;;;;;;;;1032:64;;;-1:-1:-1;1080:5:1;1073:12;;1032:64;-1:-1:-1;;;;;;1105:21:1;;;;;:12;:21;;;;;:28;;-1:-1:-1;;1105:28:1;1129:4;1105:28;;;;;;1129:4;928:233::o;438:28:4:-;;;-1:-1:-1;;;;;438:28:4;;:::o;1700:328::-;1791:4;569:13;;-1:-1:-1;;;;;569:13:4;555:10;:27;551:59;;;-1:-1:-1;;;;;1815:15:4;;;1811:58;;;-1:-1:-1;1853:5:4;1846:12;;1811:58;1905:13;;;1884:45;;-1:-1:-1;;;;;1884:45:4;;;;1905:13;;;1884:45;;;-1:-1:-1;1939:13:4;:24;;-1:-1:-1;;;;;1939:24:4;;-1:-1:-1;;1939:24:4;;;;;;;;1973:27;;;;;;;1700:328;;;:::o;587:44:1:-;;;;;;;;;;;;;;;:::o",
  "source": "\n/**\n* Copyright 2017–2018, LaborX PTY\n* Licensed under the AGPL Version 3 license.\n*/\n\npragma solidity ^0.4.21;\n\n\nimport \"solidity-shared-lib/contracts/Owned.sol\";\n\n\n/**\n* @title Events History universal multi contract.\n*\n* Contract serves as an Events storage for any type of contracts.\n* Events appear on this contract address but their definitions provided by calling contracts.\n*\n* Note: all the non constant functions return false instead of throwing in case if state change\n* didn't happen yet.\n*/\ncontract MultiEventsHistory is Owned {\n    // Authorized calling contracts.\n    mapping(address => bool) public isAuthorized;\n\n    modifier onlyAuthorized {\n        if (isAuthorized[msg.sender] || \n            msg.sender == contractOwner\n        ) {\n            _;\n        }\n    }\n\n    /**\n    * Authorize new caller contract.\n    *\n    * @param _caller address of the new caller.\n    *\n    * @return success.\n    */\n    function authorize(address _caller) \n    external\n    onlyAuthorized \n    returns (bool) \n    {\n        if (isAuthorized[_caller]) {\n            return false;\n        }\n        isAuthorized[_caller] = true;\n        return true;\n    }\n\n    /**\n     * Reject access.\n     *\n     * @param _caller address of the caller.\n     */\n    function reject(address _caller) \n    external \n    onlyAuthorized \n    {\n        delete isAuthorized[_caller];\n    }\n\n    /**\n    * Event emitting fallback.\n    *\n    * Can be and only called by authorized caller.\n    * Delegate calls back with provided msg.data to emit an event.\n    *\n    * Throws if call failed.\n    */\n    function () external {\n        if (!isAuthorized[msg.sender]) {\n            return;\n        }\n        // Internal Out Of Gas/Throw: revert this transaction too;\n        // Recursive Call: safe, all changes already made.\n        if (!msg.sender.delegatecall(msg.data)) {\n            revert(\"[MultiEventsHistory] Cannot delegatecall to a sender\");\n        }\n    }\n}\n",
  "sourcePath": "solidity-eventshistory-lib/contracts/MultiEventsHistory.sol",
  "ast": {
    "absolutePath": "solidity-eventshistory-lib/contracts/MultiEventsHistory.sol",
    "exportedSymbols": {
      "MultiEventsHistory": [
        91
      ]
    },
    "id": 92,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "90:24:1"
      },
      {
        "absolutePath": "solidity-shared-lib/contracts/Owned.sol",
        "file": "solidity-shared-lib/contracts/Owned.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 92,
        "sourceUnit": 441,
        "src": "117:49:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "Owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 440,
              "src": "538:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned_$440",
                "typeString": "contract Owned"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "538:5:1"
          }
        ],
        "contractDependencies": [
          440
        ],
        "contractKind": "contract",
        "documentation": "@title Events History universal multi contract.\n* Contract serves as an Events storage for any type of contracts.\nEvents appear on this contract address but their definitions provided by calling contracts.\n* Note: all the non constant functions return false instead of throwing in case if state change\ndidn't happen yet.",
        "fullyImplemented": true,
        "id": 91,
        "linearizedBaseContracts": [
          91,
          440
        ],
        "name": "MultiEventsHistory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 12,
            "name": "isAuthorized",
            "nodeType": "VariableDeclaration",
            "scope": 91,
            "src": "587:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 9,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "595:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "587:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 10,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "606:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "662:125:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 14,
                        "name": "isAuthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "676:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 17,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 724,
                          "src": "689:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "689:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "676:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 21,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 18,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 724,
                          "src": "717:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 19,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "717:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 20,
                        "name": "contractOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "731:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "717:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "676:68:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 25,
                  "nodeType": "IfStatement",
                  "src": "672:109:1",
                  "trueBody": {
                    "id": 24,
                    "nodeType": "Block",
                    "src": "755:26:1",
                    "statements": [
                      {
                        "id": 23,
                        "nodeType": "PlaceholderStatement",
                        "src": "769:1:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 27,
            "name": "onlyAuthorized",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "662:0:1"
            },
            "src": "638:149:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "1022:139:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 36,
                      "name": "isAuthorized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1036:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 38,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 37,
                      "name": "_caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1049:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1036:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 42,
                  "nodeType": "IfStatement",
                  "src": "1032:64:1",
                  "trueBody": {
                    "id": 41,
                    "nodeType": "Block",
                    "src": "1059:37:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1080:5:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 35,
                        "id": 40,
                        "nodeType": "Return",
                        "src": "1073:12:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 43,
                        "name": "isAuthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1105:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 45,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 44,
                        "name": "_caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "1118:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1105:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1129:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1105:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "1105:28:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1150:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 35,
                  "id": 50,
                  "nodeType": "Return",
                  "src": "1143:11:1"
                }
              ]
            },
            "documentation": "Authorize new caller contract.\n    * @param _caller address of the new caller.\n    * @return success.",
            "id": 52,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 32,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 31,
                  "name": "onlyAuthorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 27,
                  "src": "982:14:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "982:14:1"
              }
            ],
            "name": "authorize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "name": "_caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "947:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "946:17:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "1011:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1010:6:1"
            },
            "scope": 91,
            "src": "928:233:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "1329:45:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1339:28:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 59,
                        "name": "isAuthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1346:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 61,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 60,
                        "name": "_caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1359:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1346:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "1339:28:1"
                }
              ]
            },
            "documentation": "Reject access.\n     * @param _caller address of the caller.",
            "id": 65,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 57,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 56,
                  "name": "onlyAuthorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 27,
                  "src": "1309:14:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1309:14:1"
              }
            ],
            "name": "reject",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "name": "_caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "1273:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1273:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1272:17:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1329:0:1"
            },
            "scope": 91,
            "src": "1257:117:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "1606:340:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1620:25:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 68,
                        "name": "isAuthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1621:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 71,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 69,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 724,
                          "src": "1634:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1634:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1621:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 75,
                  "nodeType": "IfStatement",
                  "src": "1616:62:1",
                  "trueBody": {
                    "id": 74,
                    "nodeType": "Block",
                    "src": "1647:31:1",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 67,
                        "id": 73,
                        "nodeType": "Return",
                        "src": "1661:7:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1817:34:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 79,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "1842:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1842:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 76,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "1818:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1818:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "delegatecall",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1818:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_baredelegatecall_nonpayable$__$returns$_t_bool_$",
                          "typeString": "function () returns (bool)"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1818:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 88,
                  "nodeType": "IfStatement",
                  "src": "1813:127:1",
                  "trueBody": {
                    "id": 87,
                    "nodeType": "Block",
                    "src": "1853:87:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "5b4d756c74694576656e7473486973746f72795d2043616e6e6f742064656c656761746563616c6c20746f20612073656e646572",
                              "id": 84,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1874:54:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ec5bf3a350815556f7c444d47f6bee506cdfe42db9a3e6d6bdfece101f9a28f5",
                                "typeString": "literal_string \"[MultiEventsHistory] Cannot delegatecall to a sender\""
                              },
                              "value": "[MultiEventsHistory] Cannot delegatecall to a sender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_ec5bf3a350815556f7c444d47f6bee506cdfe42db9a3e6d6bdfece101f9a28f5",
                                "typeString": "literal_string \"[MultiEventsHistory] Cannot delegatecall to a sender\""
                              }
                            ],
                            "id": 83,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              729,
                              730
                            ],
                            "referencedDeclaration": 730,
                            "src": "1867:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1867:62:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 86,
                        "nodeType": "ExpressionStatement",
                        "src": "1867:62:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "Event emitting fallback.\n    * Can be and only called by authorized caller.\nDelegate calls back with provided msg.data to emit an event.\n    * Throws if call failed.",
            "id": 90,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1594:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1606:0:1"
            },
            "scope": 91,
            "src": "1585:361:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 92,
        "src": "507:1441:1"
      }
    ],
    "src": "90:1859:1"
  },
  "legacyAST": {
    "absolutePath": "solidity-eventshistory-lib/contracts/MultiEventsHistory.sol",
    "exportedSymbols": {
      "MultiEventsHistory": [
        91
      ]
    },
    "id": 92,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "90:24:1"
      },
      {
        "absolutePath": "solidity-shared-lib/contracts/Owned.sol",
        "file": "solidity-shared-lib/contracts/Owned.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 92,
        "sourceUnit": 441,
        "src": "117:49:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "Owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 440,
              "src": "538:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned_$440",
                "typeString": "contract Owned"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "538:5:1"
          }
        ],
        "contractDependencies": [
          440
        ],
        "contractKind": "contract",
        "documentation": "@title Events History universal multi contract.\n* Contract serves as an Events storage for any type of contracts.\nEvents appear on this contract address but their definitions provided by calling contracts.\n* Note: all the non constant functions return false instead of throwing in case if state change\ndidn't happen yet.",
        "fullyImplemented": true,
        "id": 91,
        "linearizedBaseContracts": [
          91,
          440
        ],
        "name": "MultiEventsHistory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 12,
            "name": "isAuthorized",
            "nodeType": "VariableDeclaration",
            "scope": 91,
            "src": "587:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 9,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "595:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "587:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 10,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "606:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "662:125:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 14,
                        "name": "isAuthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "676:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 17,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 724,
                          "src": "689:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "689:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "676:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 21,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 18,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 724,
                          "src": "717:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 19,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "717:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 20,
                        "name": "contractOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "731:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "717:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "676:68:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 25,
                  "nodeType": "IfStatement",
                  "src": "672:109:1",
                  "trueBody": {
                    "id": 24,
                    "nodeType": "Block",
                    "src": "755:26:1",
                    "statements": [
                      {
                        "id": 23,
                        "nodeType": "PlaceholderStatement",
                        "src": "769:1:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 27,
            "name": "onlyAuthorized",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "662:0:1"
            },
            "src": "638:149:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "1022:139:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 36,
                      "name": "isAuthorized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1036:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 38,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 37,
                      "name": "_caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1049:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1036:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 42,
                  "nodeType": "IfStatement",
                  "src": "1032:64:1",
                  "trueBody": {
                    "id": 41,
                    "nodeType": "Block",
                    "src": "1059:37:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1080:5:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 35,
                        "id": 40,
                        "nodeType": "Return",
                        "src": "1073:12:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 43,
                        "name": "isAuthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1105:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 45,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 44,
                        "name": "_caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "1118:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1105:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1129:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1105:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "1105:28:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1150:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 35,
                  "id": 50,
                  "nodeType": "Return",
                  "src": "1143:11:1"
                }
              ]
            },
            "documentation": "Authorize new caller contract.\n    * @param _caller address of the new caller.\n    * @return success.",
            "id": 52,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 32,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 31,
                  "name": "onlyAuthorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 27,
                  "src": "982:14:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "982:14:1"
              }
            ],
            "name": "authorize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "name": "_caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "947:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "946:17:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "1011:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1010:6:1"
            },
            "scope": 91,
            "src": "928:233:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "1329:45:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1339:28:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 59,
                        "name": "isAuthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1346:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 61,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 60,
                        "name": "_caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1359:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1346:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "1339:28:1"
                }
              ]
            },
            "documentation": "Reject access.\n     * @param _caller address of the caller.",
            "id": 65,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 57,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 56,
                  "name": "onlyAuthorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 27,
                  "src": "1309:14:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1309:14:1"
              }
            ],
            "name": "reject",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "name": "_caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "1273:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1273:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1272:17:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1329:0:1"
            },
            "scope": 91,
            "src": "1257:117:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "1606:340:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1620:25:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 68,
                        "name": "isAuthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1621:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 71,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 69,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 724,
                          "src": "1634:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1634:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1621:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 75,
                  "nodeType": "IfStatement",
                  "src": "1616:62:1",
                  "trueBody": {
                    "id": 74,
                    "nodeType": "Block",
                    "src": "1647:31:1",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 67,
                        "id": 73,
                        "nodeType": "Return",
                        "src": "1661:7:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1817:34:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 79,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "1842:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1842:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 76,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "1818:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1818:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "delegatecall",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1818:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_baredelegatecall_nonpayable$__$returns$_t_bool_$",
                          "typeString": "function () returns (bool)"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1818:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 88,
                  "nodeType": "IfStatement",
                  "src": "1813:127:1",
                  "trueBody": {
                    "id": 87,
                    "nodeType": "Block",
                    "src": "1853:87:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "5b4d756c74694576656e7473486973746f72795d2043616e6e6f742064656c656761746563616c6c20746f20612073656e646572",
                              "id": 84,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1874:54:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ec5bf3a350815556f7c444d47f6bee506cdfe42db9a3e6d6bdfece101f9a28f5",
                                "typeString": "literal_string \"[MultiEventsHistory] Cannot delegatecall to a sender\""
                              },
                              "value": "[MultiEventsHistory] Cannot delegatecall to a sender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_ec5bf3a350815556f7c444d47f6bee506cdfe42db9a3e6d6bdfece101f9a28f5",
                                "typeString": "literal_string \"[MultiEventsHistory] Cannot delegatecall to a sender\""
                              }
                            ],
                            "id": 83,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              729,
                              730
                            ],
                            "referencedDeclaration": 730,
                            "src": "1867:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1867:62:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 86,
                        "nodeType": "ExpressionStatement",
                        "src": "1867:62:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "Event emitting fallback.\n    * Can be and only called by authorized caller.\nDelegate calls back with provided msg.data to emit an event.\n    * Throws if call failed.",
            "id": 90,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1594:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1606:0:1"
            },
            "scope": 91,
            "src": "1585:361:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 92,
        "src": "507:1441:1"
      }
    ],
    "src": "90:1859:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "66": {
      "events": {},
      "links": {},
      "address": "0x967b19bad9c3a9e14d21d92c14c9ac0555190eb7",
      "transactionHash": "0x2eaa1b88121610c90f384ccff82db9e103e23e37922f398dbca4ea49608f042d"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-07-27T20:29:06.150Z"
}